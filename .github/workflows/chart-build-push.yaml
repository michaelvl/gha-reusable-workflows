on:
  workflow_call:
    inputs:
      chartDir:
        description: "Base directory of chart, typically 'charts'"
        type: string
      chartName:
        description: "Name of chart to build"
        type: string
      craneVersion:
        description: "Version of crane to use"
        default: "0.18.0"
        type: string
      helmVersion:
        description: "Version of Helm to use"
        default: "3.14.0"
        type: string
      githubAttestorVersion:
        description: "Version of GitHub attestor to use"
        default: "1.1.4"
        type: string
    outputs:
      digest:
        description: "Container image digest"
        value: ${{ jobs.push.outputs.digest }}

jobs:
  detect-workflow:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Needed to detect the current reusable repository and ref
      packages: write
    outputs:
      repository: ${{ steps.detect.outputs.repository }}
      ref: ${{ steps.detect.outputs.ref }}
      workflow: ${{ steps.detect.outputs.workflow }}
    steps:
      - name: Detect this workflow repository and ref
        id: detect
        uses: slsa-framework/slsa-github-generator/.github/actions/detect-workflow-js@07e64b653f10a80b6510f4568f685f8b7b9ea830 # v1.9.0

  build:
    permissions:
      contents: read
      id-token: none
      packages: write
    runs-on: ubuntu-latest
    outputs:
      chartVersion: ${{ steps.push.outputs.chartVersion }}
      digest: ${{ steps.meta.outputs.digest }}
      chart: ${{ steps.meta.outputs.chart }}
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Install Helm
      uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
      with:
        version: ${{ inputs.helmVersion }}

    - name: Install Crane
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd $(mktemp -d)
        gh release download \
        --repo google/go-containerregistry \
        --pattern "go-containerregistry_Linux_x86_64.tar.gz" "v${{ inputs.craneVersion }}"
        tar xvf go-containerregistry_Linux_x86_64.tar.gz
        mkdir -p $HOME/.bin/crane
        mv ./crane $HOME/.bin/crane
        echo "$HOME/.bin/crane" >> $GITHUB_PATH
        $HOME/.bin/crane/crane version

    - name: Package chart
      run: |
        helm package ${{ inputs.chartDir }}/${{ inputs.chartName }}

    - name: login to ghcr.io using helm
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin

    - name: Push chart
      id: push
      run: |
        VERSION=$(cat ${{ inputs.chartDir }}/${{ inputs.chartName }}/Chart.yaml | awk -F "[, ]+" '/version/{print $NF}')
        helm push "${{ inputs.chartName }}-$VERSION.tgz" oci://ghcr.io/${{ github.repository_owner }} 2>&1 | tee helm-push-out.txt
        echo "chartVersion=$VERSION" >> $GITHUB_OUTPUT

    - name: Chart meta
      id: meta
      run: |
        DIGEST=$(cat helm-push-out.txt | awk -F "[, ]+" '/Digest/{print $NF}')
        echo "digest=$DIGEST" >> $GITHUB_OUTPUT
        CHART=$(echo ghcr.io/${{ github.repository }}-helm | tr '[:upper:]' '[:lower:]')
        echo "chart=$CHART@$DIGEST" >> $GITHUB_OUTPUT

    - name: Login to GitHub Container Registry using Docker
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Add additional tags
      run: |
        crane tag "${{ steps.meta.outputs.chart }}" "${{ steps.push.outputs.chartVersion }}"
        crane tag "${{ steps.meta.outputs.chart }}" latest

  sign:
    permissions:
      contents: none
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
    - name: Cosign install
      uses: sigstore/cosign-installer@9614fae9e5c5eddabb09f90a270fcb487c9f7149 # v3.3.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Sign chart
      run: cosign sign --yes -a "chartVersion=${{ needs.build.outputs.chartVersion }}" "${{ needs.build.outputs.chart }}"
